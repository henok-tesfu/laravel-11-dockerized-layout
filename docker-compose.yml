version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: myapp:latest
        container_name: myapp
        restart: unless-stopped
        volumes:
            - .:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - app-network
        depends_on:
            - db
        env_file:
            - .env
        entrypoint: ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]

    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        image: myapp:latest
        container_name: artisan
        restart: "no"
        volumes:
            - .:/var/www
        depends_on:
            db:
                condition: service_healthy
        networks:
            - app-network
        env_file:
            - .env
        entrypoint: ["php", "artisan"]
        command: ["migrate", "--force"]

    web:
        image: nginx:latest
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - app-network
        depends_on:
            - app

    db:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            retries: 5
            timeout: 5s

networks:
    app-network:
        driver: bridge

volumes:
    db_data:
